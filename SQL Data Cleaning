----- MY SQL DATA CLEANING PROJECT ------

SELECT *
FROM layoffs;

-- 1. REMOVE DUPLICATES 
-- 2. STADARDIZE THE DATA 
-- 3. NULL VALUES AND BLANK VALUES
-- 4. REMOVE ANY COLUMNS

CREATE TABLE layoffs_stagging
LIKE layoffs;

INSERT layoffs_stagging
SELECT *
FROM layoffs;

SELECT *
FROM layoffs_stagging;


-- 1. Remove Duplicates

# First let's check for duplicates

WITH duplicate_cte AS
(
SELECT *,
ROW_NUMBER() OVER 
(
PARTITION BY company, industry, total_laid_off, percentage_laid_off, `date`, stage, funds_raised_millions, location ) AS row_num
FROM layoffs_stagging )
 SELECT *
 FROM duplicate_cte
 WHERE row_num > 1;
 
 -- Deleting Duplicates
 
 ALTER TABLE world_layoffs.layoffs_staging ADD row_num INT;


SELECT *
FROM world_layoffs.layoffs_staging
;

CREATE TABLE `world_layoffs`.`layoffs_staging2` (
`company` text,
`location`text,
`industry`text,
`total_laid_off` INT,
`percentage_laid_off` text,
`date` text,
`stage`text,
`country` text,
`funds_raised_millions` int,
row_num INT
);

INSERT INTO `world_layoffs`.`layoffs_staging2`
(`company`,
`location`,
`industry`,
`total_laid_off`,
`percentage_laid_off`,
`date`,
`stage`,
`country`,
`funds_raised_millions`,
`row_num`)
SELECT `company`,
`location`,
`industry`,
`total_laid_off`,
`percentage_laid_off`,
`date`,
`stage`,
`country`,
`funds_raised_millions`,
		ROW_NUMBER() OVER (
			PARTITION BY company, location, industry, total_laid_off,percentage_laid_off,`date`, stage, country, funds_raised_millions
			) AS row_num
	FROM 
		world_layoffs.layoffs_stagging;
        

DELETE 
FROM layoffs_staging2
WHERE row_num >= 2;

-- duplicates have been deleted


-- 2. Standardize Data


SELECT company, TRIM(company) -- trimming blank spaces 
FROM layoffs_staging2;

SELECT DISTINCT industry  -- fixing industry names
FROM layoffs_staging2
Order by industry;

SELECT *
FROM layoffs_staging2
WHERE industry LIKE 'Crypto%';

UPDATE layoffs_staging2
SET industry = 'Crypto'
WHERE industry LIKE 'Crypto%';

-- Removing . from the country coloumn
SELECT DISTINCT country
FROM layoffs_staging2
WHERE country LIKE 'United States%'
ORDER BY 1;
-- so there is a dot after United States 
SELECT DISTINCT country, TRIM(TRAILING '.' FROM country)
FROM layoffs_staging2
ORDER BY 1;

UPDATE layoffs_staging2
SET country = TRIM(TRAILING '.' FROM country)
WHERE country LIKE  'United States%';

-- changing date data format

SELECT `date`,
STR_TO_DATE(`date`, '%m/%d/%Y')
FROM layoffs_staging2;

UPDATE layoffs_staging2
SET `date` = STR_TO_DATE(`date`, '%m/%d/%Y');

SELECT *
FROM layoffs_staging2;

-- changing data type to date

ALTER TABLE layoffs_staging2
MODIFY COLUMN `date` DATE;


-- Filling up Missing Values

SELECT *
FROM layoffs_staging2
WHERE industry IS NULL
OR industry = '';

SELECT *
FROM layoffs_staging2 t1
JOIN layoffs_staging2 t2
  ON t1.company = t2.company 
WHERE (t1.industry IS NULL OR t1.industry = '')
AND t2.industry IS NOT NULL;

UPDATE layoffs_staging2
SET industry = null
WHERE industry = '';

UPDATE layoffs_staging2 t1
JOIN layoffs_staging2 t2
  ON t1.company = t2.company 
SET t1.industry = t2.industry 
WHERE t1.industry IS NULL
AND t2.industry IS NOT NULL;

SELECT *
FROM layoffs_staging2
WHERE industry IS NULL
OR industry = '';


-- DELETING rows having Null Values

SELECT *
FROM layoffs_staging2
WHERE total_laid_off IS NULL
AND percentage_laid_off IS NULL;

DELETE
FROM layoffs_staging2
WHERE total_laid_off IS NULL
AND percentage_laid_off IS NULL;


-- Deleting row num() coloumn

ALTER TABLE layoffs_staging2
DROP COLUMN row_num;

-- ALL DONE
SELECT *
FROM layoffs_staging2;
  
